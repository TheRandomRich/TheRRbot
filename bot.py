import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("üí∞ –î–æ–Ω–∞—Ç", callback_data="donate"),
        InlineKeyboardButton("üì¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data="join")
    )
    return keyboard

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∫—Ä–∞—É–¥—Ñ–∞–Ω–¥–∏–Ω–≥–æ–≤–æ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ.\n\n"
        "üìå –õ—é–¥–∏ –º–æ–≥—É—Ç –¥–µ–ª–∞—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –¥–æ–Ω–∞—Ç—ã, —á—Ç–æ–±—ã —Å–ª—É—á–∞–π–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª—É—á–∏–ª –¥–µ–Ω—å–≥–∏.\n"
        "üì¢ –¢—ã –º–æ–∂–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!",
        reply_markup=main_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler(lambda c: c.data)
async def button_handler(callback_query: types.CallbackQuery):
    if callback_query.data == "donate":
        await bot.send_message(
            callback_query.from_user.id,
            "üí≥ –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –¥–æ–Ω–∞—Ç, –æ—Ç–ø—Ä–∞–≤—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –Ω–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å:\n\n"
            "`0x123456789ABCDEF123456789ABCDEF123456789A`",
            parse_mode="Markdown"
        )
    elif callback_query.data == "join":
        await bot.send_message(
            callback_query.from_user.id,
            "üîÑ –¢—ã –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!\n\n"
            "–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞."
        )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(dp.start_polling())
    loop.run_forever()

